name: HenRDP 2022

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Download and install Tailscale
      run: |
        Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe" -OutFile "tailscale-setup-latest.exe"
        Start-Process -FilePath "tailscale-setup-latest.exe" -ArgumentList "/silent" -Wait
        Write-Host "Tailscale installed successfully."

    - name: Verify Tailscale installation
      run: |
        & "C:\Program Files\Tailscale\tailscale.exe" version
        Write-Host "Tailscale version checked."

    - name: Add Tailscale AuthKey
      run: |
        $authKey = "${{ secrets.TAILSCALE_AUTHKEY }}"
        Write-Host "Using Tailscale AuthKey: $authKey"
        & "C:\Program Files\Tailscale\tailscale.exe" up --authkey=$authKey
        Write-Host "Tailscale auth key added successfully."
        Start-Sleep -Seconds 10

    - name: Enable Remote Desktop
      run: |
        # Mengaktifkan Remote Desktop
        $regKey = "HKLM:\System\CurrentControlSet\Control\Terminal Server"
        Set-ItemProperty -Path $regKey -Name "fDenyTSConnections" -Value 0

        # Dapatkan IP Tailscale yang aktif
        $tailscaleIP = & "C:\Program Files\Tailscale\tailscale.exe" ip -4
        Write-Host "Active Tailscale IP: $tailscaleIP"

        # Membuka port RDP (3389) di Windows Firewall untuk IP Tailscale aktif
        New-NetFirewallRule -Name "Allow Tailscale RDP" -DisplayName "Allow RDP for Active Tailscale IP" -Enabled True -Protocol TCP -Action Allow -LocalPort 3389 -RemoteAddress $tailscaleIP
        Write-Host "RDP enabled and port 3389 opened in Windows Firewall for Tailscale IP: $tailscaleIP."

    - name: Set Administrator Username and Password
      run: |
        # Set username and password for RDP login
        net user administrator /active:yes
        net user administrator "HenRDP2024" /add
        net localgroup administrators administrator /add
        Write-Host "Administrator account enabled and password set."

    - name: Enable Sound (Auto On)
      run: |
        # Mengaktifkan suara pada Windows
        Set-ItemProperty -Path "HKCU:\Control Panel\Sound" -Name "Mute" -Value 0
        Write-Host "Windows sound enabled."

    - name: Uninstall All Unnecessary Applications except Chrome
      run: |
        # Menyaring aplikasi Microsoft yang akan dihapus kecuali Google Chrome
        $appsToRemove = @(
            "Microsoft.XboxApp",
            "Microsoft.MicrosoftEdge",
            "Microsoft.BingWeather",
            "Microsoft.MicrosoftOfficeHub",
            "Microsoft.OfficeOneNote",
            "Microsoft.MixedReality.Portal",
            "Microsoft.StorePurchaseApp",
            "Microsoft.People",
            "Microsoft.GetHelp",
            "Microsoft.SkypeApp",
            "Microsoft.YourPhone",
            "Microsoft.ZuneMusic",
            "Microsoft.ZuneVideo",
            "Microsoft.Microsoft3DViewer"
        )
        
        # Menghapus aplikasi yang tidak diperlukan
        foreach ($app in $appsToRemove) {
            Get-AppxPackage -Name $app | Remove-AppxPackage
            Write-Host "$app removed."
        }

        # Memastikan Google Chrome tetap terpasang
        $chromeApp = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -like "*Google Chrome*" }
        if ($chromeApp) {
            Write-Host "Google Chrome is installed and will not be removed."
        } else {
            Write-Host "Google Chrome not found."
        }

    - name: Download and Set Wallpaper
      run: |
        # Download the wallpaper image
        Invoke-WebRequest -Uri "https://i.ibb.co/jTrfy3D/20241128-215722.png" -OutFile "C:\Users\Public\Desktop\wallpaper.png"
        
        # Set the downloaded image as wallpaper
        $wallpaperPath = "C:\Users\Public\Desktop\wallpaper.png"
        Add-Type -TypeDefinition @"
        using System;
        using System.Runtime.InteropServices;
        public class Wallpaper {
            [DllImport("user32.dll", CharSet = CharSet.Auto)]
            public static extern int SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
        }
        "@
        [Wallpaper]::SystemParametersInfo(20, 0, $wallpaperPath, 0x01 | 0x02)
        Write-Host "Wallpaper changed successfully."

    - name: Get Tailscale IP address
      run: |
        $tailscaleIP = & "C:\Program Files\Tailscale\tailscale.exe" ip -4
        Write-Host "Tailscale IP Address: $tailscaleIP"

    - name: Start RDP session
      run: |
        Write-Host "Access RDP using the Tailscale IP and login with username 'administrator' and password 'HenRDP2024'"
        Start-Sleep -Seconds 5

    - name: Keep printing status for 30 days
      run: |
        $endTime = (Get-Date).AddDays(30)  # Mengubah waktu ke 30 hari
        while ((Get-Date) -lt $endTime) {
          Write-Host "HenRdp Aktif setiap menit"
          Start-Sleep -Seconds 60
        }
